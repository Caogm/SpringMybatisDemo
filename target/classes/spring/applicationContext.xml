<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
           http://www.springframework.org/schema/aop   
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
           http://www.springframework.org/schema/tx  
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
           http://www.springframework.org/schema/context  
           http://www.springframework.org/schema/context/spring-context-3.0.xsd">  
              
    <!-- 采用注释的方式配置bean -->    
    <context:annotation-config />    
    <!-- 配置要扫描的包 -->    
    <context:component-scan base-package="com.springmybatis"></context:component-scan>  
  
	<!-- 加载配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	<!-- 数据库连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="10" />
		<property name="maxIdle" value="5" />
	</bean>
  
    <!-- Session工厂 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSource" />  
        <!-- mybatis配置文件 -->  
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />  
    </bean>
    
    <!-- 配置dao -->
      <bean id="studentDao" class="com.springmybatis.dao.StudentDaoImpl">
      	<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
      </bean>
      
     <!-- 配置mapper 用于生成mapper代理对象 使用 MapperFactoryBean-->
     	
<!--       <bean id="studentMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
      	<property name="mapperInterface" value="com.springmybatis.mapper.StudentMapper"></property>
       
      	<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
      </bean> -->
     
      
      <!--使用MapperScannerConfigurer（扫描mapper）
	MapperScannerConfigurer：mapper的扫描器，将包下边的mapper接口自动创建代理对象，
	自动创建到spring容器中，bean的id是mapper的类名（首字母小写）
	 -->
	 	 <!-- 配置扫描包的路径如果要扫描多个包，中间使用半角逗号分隔
		 	使用sqlSessionFactoryBeanName-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.springmybatis"/>
	
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>
      
    <!-- 配置SqlSessionTemplate -->    
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">    
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />    
    </bean>
  
</beans>    
